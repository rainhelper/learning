#uaCheck()

<style type="text/css">
html, body {height: 100%;width: 100%;margin: 0;padding: 0;overflow:hidden;background-color: #262626;}

#frameEl {width: 100%;height:100%;overflow:hidden;background-color: #262626;position: relative;}
.slide {height:100%;}
.panel {position: relative;background: url(http://m1.daumcdn.net/img-section/enter/common/loading.gif) 50% 50% no-repeat;}
.panel img {position: absolute;top: 0;}
#loading {position: absolute;top:0;left:0;width: 100%;height:100%;z-index: 9999;background: url(http://m1.daumcdn.net/img-section/enter/common/loading.gif) 50% 50% no-repeat;  display: none;}
.layer_music_type1{width:100%; height:100%;}
</style>

<div class="layer_music_type1">
<div id="frameEl"></div>
	<div id="header" class="layer_head">
		<h4 class="screen_out">사진 확대 보기</h4>
		<strong class="count"><span id="currentCount">1</span>/<span id="totalCount">54</span></strong>
	</div>
	<div class="layer_body">
		<a id="prevBtn" href="#none" class="btn_layer btn_prev">이전 사진</a>
		<a id="nextBtn" href="#none" class="btn_layer btn_next">다음 사진</a>
	</div>
	<a id="closeBtn" href="/musicbar/detail?menu_id=$!{command.menu_id}&board_id=$!{command.board_id}" class="btn_layer btn_close">닫기</a>

	
<script type="text/javascript" src="http://m1.daumcdn.net/svc/original/U03/cssjs/slide/slide-1.0.5.min.js"></script>
<script type="text/javascript">
var config ={}
config.tiaraDomain = "m.music.daum.net"

var ImgList =  $!viewer.photoListData

var headTag = document.getElementsByTagName("head")[0],
frameEl = document.getElementById("frameEl"),
queryEl = document.getElementById("query"),
click = "ontouchstart" in window ? "touchstart" : "click",
prevBtn = document.getElementById("prevBtn"),
nextBtn = document.getElementById("nextBtn"),
closeBtn = document.getElementById("closeBtn"),
footer = document.getElementById("footer"),
header = document.getElementById("header"),
currentCountEl = document.getElementById("currentCount"),
pageNum = 1;
var EventUtil = window.gesture.EventUtil;



function loadInitialData() {
	initSlide(ImgList);
}



var loading = document.getElementById("loading");
function showLoadingBar() {
    loading.style.display = "block";
}
function hideLoadingBar() {
    loading.style.display = "none";
}


var ImageDataSource = slide.DataSource.extend({
    queryPrevForPreLoad: function (callback) {
        callback(this.data[this.index - 2] || null, this.data[this.index - 3] || null);
    },
    queryNextForPreLoad: function (callback) {
        callback(this.data[this.index + 2] || null, this.data[this.index + 3] || null);
    }
});



//이미지 슬라이드를 생성/초기화 해주는 함수.
function initSlide(data) {
    ImgManager.setClientSize(frameEl);

    // json데이터를 알맞은 형태로 파싱.
    var initData = buildSlides(data);

    // DataSource 생성/초기화 부분.
    var ds = new ImageDataSource(initData);

	#if($!imgorder)
	ds.setCurrentIndex($!{imgorder});
	#end

    // Slide 생성/초기화 부분.
    var sl = new slide.Slide(frameEl, ds);

    // 좌우 버튼 클릭시 이미지 전환 해주는 부분.
    setButton(sl);
    
    // 화면 가로세로 전환시 리자이즈 해주는 부분.
    sl.on("resize", function () {
        ImgManager.setClientSize(frameEl);
        sl.show();
    });
  

	//상단 카운트 설정 함수
	setHeader(sl, ds);
    // 상단카운트 및 좌우 버튼 토클 함수.
    setToggle(sl);
// pre 이미지 로딩 함수.
    preImgLoader(sl, ds);
}


function setButton(sl) {
    EventUtil.listen(prevBtn, click, function(){
        sl.prev();
    }, false);
    EventUtil.listen(nextBtn, click, function(){
        sl.next();
    }, false);
}



function setHeader(sl, ds) {
	setTotalCount(ds);
	function setDesc () {
		//티아라 로그를 쌓아준다. 
		callTiara(location.href, "뮤직바 포토뷰어", config.tiaraDomain);
        ds.queryCurrent(function (data) {
        	
        	setCurrentCount(ds);
        });
    }
    setDesc();
    sl.on("startDrag", function (session) {
        var ev = session.targetEvent;
        if(ev.preventDefault){
            ev.preventDefault();
        } else {
            ev.returnValue = false;
        }
    });

    sl.on("next", setDesc);
    sl.on("prev", setDesc);
}

function setTotalCount(ds){
	var totalCountEl = document.getElementById("totalCount");
	totalCountEl.innerHTML = ds.data.length || 0;
}

function setCurrentCount (ds) {
    currentCountEl.innerHTML = (ds.index)? ds.index + 1 : 1;
     
}

function preImgLoader(sl, ds) {
    function preLoadImg(data) {
        if (data && data.image) {
            var img = new Image();
            img.src = data.image;
        }
    }
    sl.on("next", function () {
        ds.queryNextForPreLoad(function (next1, next2){
            preLoadImg(next1);
            preLoadImg(next2);
        });
    });
    sl.on("prev", function () {
        ds.queryPrevForPreLoad(function (prev1, prev2){
            preLoadImg(prev1);
            preLoadImg(prev2);
        });
    });
}



function setToggle(sl) {
    var viewState = "block";
    function setDisplay (state) {
        header.style.display = state;
        prevBtn.style.display = state;
        nextBtn.style.display = state;
        closeBtn.style.display = state;
        viewState = state;
    }

    sl.on("click", function() {
        if (viewState === "none") {
            setDisplay("block");
        } else {
            setDisplay("none");
        }
    });
}

function buildSlides(data) {
        var items = data,
        arr = [];
    for (var i = 0, len = items.length; i < len; i++) {
    	
    	var img = new Image(),
    		item;
       
        img.src = items[i].filePath;
        item = img;
        arr.push({
            image: item.src,
            width: item.width,
            height: item.height,
            title: item.title,
            link: item.link,
            toHTML: function () {
                var imgSize = ImgManager.resizeImg(this.width, this.height),
                    imgOffset = ImgManager.getImgOffset(imgSize.width, imgSize.height),
                    imgurl = this.image;
                return '<img alt="' + escape(item.title) + '" src="' + imgurl + 
                            '" width="' + imgSize.width + '" height="' + imgSize.height +
                            '" data-width="' + item.width + '" data-height="' + item.height +
                            '"style=position:absolute;top:' + imgOffset.top + 'px;left:' +imgOffset.left + 'px;" ' +
                           'onload="onImgLoad(this);" ' +
                           'onerror="onImgLoadError(this);" ' +
                           'onabort="onImgLoadError(this);">';
            }
        });
    }
    return arr;
}





(function main() {
    EventUtil.listen(window, "load", function(e){
        slide.hardwareAccelStyle += slide.isTransformEnabled ? '-webkit-transition-timing-function:linear;' : '';
        loadInitialData();
    });
})();

function onImgLoad (el) {
    el.parentNode.style.background = "none";
}
function onImgLoadError (el) {
    el.parentNode.style.background = "none";
}

var ImgManager = {
    clientWidth: 0,
    clientHeight: 0,
    setClientSize: function (el) {
        this.clientHeight = el.clientHeight - 10;
        this.clientWidth = el.clientWidth - 10;
    },
    resizeImg: function (width, height) {
		
        if (this.clientHeight > this.clientWidth) {
            return this.potraitResizeImg(width, height);
        } else {
            return this.landscapeResizeImg(width, height);
        }
    },
    potraitResizeImg: function (width, height) {
        if (this.clientWidth * height > this.clientHeight * width) {
            return this.resizeByHeight(width, height);
        } else {
            return this.resizeByWidth(width, height);
        }
    },
    landscapeResizeImg: function (width, height) {
        if (this.clientWidth * height < this.clientHeight * width) {
            return this.resizeByWidth(width, height);
        } else {
            return this.resizeByHeight(width, height);
        }
    },
    resizeByHeight: function (width, height) {
        return {width: parseInt(this.clientHeight * width / height), height: this.clientHeight};
    },
    resizeByWidth: function (width, height) {
        return {width: this.clientWidth, height: parseInt(this.clientWidth * height / width)};
    },
    getImgOffset: function (width, height) {
        return {left: parseInt((this.clientWidth + 10 - width) / 2), top: parseInt((this.clientHeight + 10 - height) / 2)};
    }
};
</script>

##티아라집계
<script charset='utf-8' type='text/javascript' src='http://m1.daumcdn.net/tiara/tracker/tiara.min.js'></script>
<script type='text/javascript'>
(function(){

	window.__pageTracker = {};
	if (typeof __Tiara !== 'undefined' && typeof __Tiara.__getTracker !== 'undefined') {
	    __pageTracker = __Tiara.__getTracker();
	} else {
	    __pageTracker.__setTitle = function() {};
	    __pageTracker.__setReferer = function() {};
	    __pageTracker.__trackPageview = function() {};
	}

	window.callTiara = function(url, title , domain){
		try {
			var _pageurl = url;
			var _pagetitle = title;
		    if (typeof __pageTracker !== 'undefined') 
		    {
		        __pageTracker.__setTitle(_pagetitle);
		        __pageTracker.__setReferer(document.referrer);		        
		        //domain은 기본 서비스도메인따라가는데 연예처럼 따로 잡을경우 tiara에 요청해야함
		        // __pageTracker.__addParam('svcdomain', 'entertain.media.daum.net');		        
		        if(domain) __pageTracker.__addParam('svcdomain', domain);		        
		        window.setTimeout(function() { try { window.__pageTracker.__trackPageview(_pageurl); } catch(e) {} }, 1);
		    }
		} catch(e) { } 
	};
})();
</script>
